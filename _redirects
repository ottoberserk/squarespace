<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <style>
    body {
      font-family: sans-serif;
      max-width: 800px;
      margin: auto;
      padding: 20px;
    }
    label {
      display: block;
      margin-bottom: 4px;
    }
    input[type="text"] {
      width: 200px;
      padding: 6px;
    }
    textarea {
      width: 100%;
      margin-bottom: 20px;
      padding: 6px;
      box-sizing: border-box;
    }
    #preview {
      border: 1px solid #999;
      min-height: 40px;
      transition: min-height 0.3s;
      padding: 6px;
    }
  </style>
</head>
<body>
  <label for="domainInput"><span title="Used to rewrite all links and image sources with your domain">ⓘ</span> Domain</label>
  <input type="text" id="domainInput" placeholder="yourdomain.com" oninput="updateFromAddress()"><br><br>

  <label for="senderInput"><span title="The visible name in email 'From' field">ⓘ</span> Sender Name</label>
  <input type="text" id="senderInput" value="no-reply"><br><br>

  <label for="fromInput"><span title="Generated using your domain and sender name">ⓘ</span> From</label>
  <input type="text" id="fromInput" value=""><br><br>

  <label for="subjectInput"><span title="The email subject line users see">ⓘ</span> Subject <button id="subjectBtn" onclick="copyReversedSubject()">Copy</button></label>
  <input type="text" id="subjectInput" placeholder="Enter your subject here..." oninput="toggleApplyButton()"><br><br>

  <label for="uploadInput"><span title="Upload HTML file instead of pasting">ⓘ</span> Upload HTML File</label>
  <input type="file" id="uploadInput" accept=".html,.htm" onchange="loadHtmlFile(this)"><br><br>

  <label><span title="This is your reversed and styled final HTML">ⓘ</span> Editable Preview <button id="applyButton" onclick="copyToClipboard(this)" disabled>Copy</button></label>
  <div id="preview" contenteditable="true"></div><br><br>

  <label for="redirectsText"><span title="Paste these into your .htaccess file for working redirects">ⓘ</span> Redirect Rules</label>
  <textarea id="redirectsText" style="height: 150px;"></textarea><br><br>

  <script>
    function slugify(text) {
      return text.toLowerCase()
        .replace(/[^a-z0-9]+/g, '-')
        .replace(/^-+|-+$/g, '')
        .substring(0, 100);
    }

    function reverseWord(word) {
      return word.split('').reverse().join('');
    }

    function wrapWord(word) {
      return `<span style=\"display:inline-block;direction:rtl;unicode-bidi:bidi-override;text-align:left;\">${reverseWord(word)}</span>`;
    }

    function reverseTextContent(text) {
      return text.split(/(\s+)/).map(token => {
        return token.trim().length > 0 ? wrapWord(token) : token;
      }).join('');
    }

    function updateFromAddress() {
      const domain = document.getElementById('domainInput').value.trim();
      const fromInput = document.getElementById('fromInput');
      fromInput.value = domain ? `no-reply@${domain}` : '';
      processEditedHTML();
    }

    function loadHtmlFile(input) {
      const file = input.files[0];
      if (!file) return;
      const reader = new FileReader();
      reader.onload = function (e) {
        document.getElementById('preview').innerHTML = e.target.result;
        document.getElementById('preview').style.minHeight = '200px';
        processEditedHTML();
      };
      reader.readAsText(file);
    }

    function processEditedHTML() {
      const domain = document.getElementById('domainInput').value.trim();
      const html = document.getElementById('preview').innerHTML;
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');
      const redirectLines = [];

      const title = doc.querySelector('title');
      if (title) title.remove();

      doc.body.querySelectorAll('p, td, div, span, a').forEach(el => {
        el.childNodes.forEach((node, index) => {
          if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim().length > 0 && !node.nodeValue.trim().startsWith("http")) {
            const spanWrapped = reverseTextContent(node.nodeValue);
            const container = document.createElement('span');
            container.innerHTML = spanWrapped;
            el.replaceChild(container, node);
          }
        });
      });

      doc.querySelectorAll('a[href]').forEach(a => {
        const original = a.getAttribute('href');
        let slug = '';
        const text = a.textContent.trim();

        if (text.length > 0) {
          slug = slugify(text);
        } else {
          const img = a.querySelector('img');
          if (img) {
            const filename = img.getAttribute('src')?.split('/').pop().split('?')[0].split('#')[0] || 'link';
            slug = slugify(filename.replace(/\.[a-z]+$/, ''));
          } else {
            slug = 'link';
          }
        }

        a.setAttribute('href', `https://${domain}/${slug}`);
        redirectLines.push(`/${slug} ${original} 302`);
      });

      doc.querySelectorAll('img[src]').forEach(img => {
        const original = img.getAttribute('src');
        const filename = original.split('/').pop().split('?')[0].split('#')[0];
        const slug = slugify(filename.replace(/\.[a-z]+$/, '')) || 'image';
        img.setAttribute('src', `https://${domain}/${slug}`);
        img.setAttribute('alt', 'icon');
        redirectLines.push(`Redirect 302 /${slug} ${original}`);
      });

      document.getElementById('redirectsText').value = redirectLines.join('\n');

      return doc.documentElement.outerHTML;
    }

    function copyToClipboard(button) {
      const result = processEditedHTML();
      navigator.clipboard.writeText(result);
      button.textContent = "Copied";
      setTimeout(() => {
        button.textContent = "Copy";
      }, 1500);
    }

    function toggleApplyButton() {
      const subject = document.getElementById('subjectInput').value.trim();
      const button = document.getElementById('applyButton');
      button.disabled = subject === '';
    }

    function copyReversedSubject() {
      const input = document.getElementById('subjectInput').value.trim();
      const btn = document.getElementById('subjectBtn');
      if (!input) return;
      const reversed = input.split('').reverse().join('');
      const rlo = "‮";
      const result = rlo + reversed;
      navigator.clipboard.writeText(result);
      btn.textContent = "Copied";
      setTimeout(() => {
        btn.textContent = "Copy";
      }, 1500);
    }
  </script>
</body>
</html>
